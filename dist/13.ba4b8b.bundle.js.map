{"version":3,"sources":["webpack:///./views/pages/user/tabs/UserBanks.vue?f0b9","webpack:///./views/pages/user/tabs/UserBanks.vue"],"names":["__exports__","store","route","currentPage","perPage","search","isFetching","length","newValue","Search","keyword","data","page","value","per_page","query","dispatch","getBanks","banks","getters","id","params","then","catch","total","pageNumbers","i","push","splice"],"mappings":"slDAGA,MAAMA,E,6BCgHN,MAAMC,EAAQ,cACRC,EAAQ,cACRC,EAAc,YAAI,GAClBC,EAAU,YAAI,IACdC,EAAS,YAAI,IACbC,EAAa,aAAI,GACjBC,EAAS,YAAI,MAEnB,gBAAMF,EAASG,IACbC,EAAOD,KAGT,MAAMC,EAAUC,IACd,IAAIC,EAAO,CACTC,KAAMT,EAAYU,MAClBC,SAAUV,EAAQS,MAClBE,MAAOL,GAETT,EAAMe,SAAS,qBAAsBL,IAGvC,gBAAMP,EAAUI,IACdJ,EAAQS,MAAQL,EAChBS,MAGF,MAAMC,EAAQ,mBAAS,IACdjB,EAAMkB,QAAQ,oBAGjBF,EAAW,KACfX,EAAWO,OAAQ,EACnB,IAAIF,EAAO,CACTS,GAAIlB,EAAMmB,OAAOD,GACjBR,KAAMT,EAAYU,MAClBC,SAAUV,EAAQS,MAClBE,MAAO,IAETd,EACGe,SAAS,qBAAsBL,GAC/BW,KAAK,KACJhB,EAAWO,OAAQ,EACnBN,EAAOM,MAAQK,EAAML,MAAMF,KAAKJ,SAEjCgB,MAAM,KACLjB,EAAWO,OAAQ,KAKnBW,EAAQ,mBAAS,IACdvB,EAAMkB,QAAQ,gBAsBH,mBAAS,KAC3B,MAAMM,EAAc,GACpB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAMX,MAAOa,IAChCD,EAAYE,KAAKD,GAEnB,OAAID,EAAYlB,OAAS,GAChBkB,EAAYG,OAAO,EAAG,IAEtBH,I,OAKX,oBAAU,KACRR,M,g2FDrMa","file":"13.ba4b8b.bundle.js","sourcesContent":["import script from \"./UserBanks.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserBanks.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <div class=\"card bg-white\">\r\n    <div class=\"card-body pt-0\">\r\n      <div class=\"table-responsive mt-0\">\r\n        <div class=\"d-flex align-items-center justify-content-between py-4\">\r\n          <div>\r\n            <span>Show</span>\r\n            <select class=\"mx-1 py-1\" v-model=\"perPage\" name=\"\" id=\"\">\r\n              <option value=\"50\">50</option>\r\n              <option value=\"100\">100</option>\r\n              <option value=\"200\">200</option>\r\n              <option value=\"500\">500</option>\r\n            </select>\r\n            <span>banks</span>\r\n          </div>\r\n\r\n          <div>\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search\" />\r\n          </div>\r\n        </div>\r\n        <table class=\"table table-stripped table-center table-hover datatable\">\r\n          <thead class=\"thead-light\">\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Bank</th>\r\n              <th>Account Name</th>\r\n              <th>Account number</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody v-if=\"banks.data && banks.data.length !== 0\">\r\n            <tr v-for=\"(bank, index) in banks.data\" :key=\"bank.id\">\r\n              <td>{{ index + 1 }}</td>\r\n              <td class=\"text-capitalize\">\r\n                {{ bank.bank_name }}\r\n              </td>\r\n              <td class=\"text-capitalize\">{{ bank.account_name }}</td>\r\n              <td class=\"text-capitalize\">{{ bank.account_number }}</td>\r\n              <td>\r\n                <span\r\n                  class=\"badge badge-pill text-capitalize bg-success-light\"\r\n                  v-if=\"bank.preferred === true\"\r\n                  >Active</span\r\n                >\r\n                <span\r\n                  class=\"badge badge-pill text-capitalize bg-danger-light\"\r\n                  v-else\r\n                  >Inactive</span\r\n                >\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div\r\n          v-if=\"isFetching\"\r\n          class=\"d-flex my-5 align-items-center justify-content-center\"\r\n        >\r\n          Loading...\r\n        </div>\r\n        <div\r\n          v-if=\"length === 0\"\r\n          class=\"d-flex my-5 align-items-center justify-content-center\"\r\n        >\r\n          No Data Available\r\n        </div>\r\n        <!-- <div\r\n      v-if=\"!isFetching && length !== 0\"\r\n      class=\"d-flex align-items-center justify-content-between p-4\"\r\n    >\r\n      <p v-if=\"subscriptions.meta\">\r\n        Showing {{ subscriptions.data.length }} of\r\n        {{ subscriptions.meta.total }} estimates\r\n      </p>\r\n      <div>\r\n        <ul class=\"pagination mb-4\">\r\n          <li\r\n            class=\"page-item\"\r\n            @click=\"previousPage\"\r\n            :class=\"{ disabled: currentPage == 1 }\"\r\n          >\r\n            <a class=\"page-link\" href=\"javascript:;\" tabindex=\"-1\">Previous</a>\r\n          </li>\r\n          <li\r\n            class=\"page-item\"\r\n            v-for=\"pageNumber in pageNumbers\"\r\n            :key=\"pageNumber\"\r\n            @click=\"setPage(pageNumber)\"\r\n            :class=\"{\r\n              active: pageNumber === currentPage,\r\n            }\"\r\n          >\r\n            <a class=\"page-link\" href=\"javascript:;\">{{ pageNumber }}</a>\r\n          </li>\r\n          <li\r\n            class=\"page-item\"\r\n            @click=\"nextPage\"\r\n            :class=\"{ disabled: pageNumbers.length <= 1 }\"\r\n          >\r\n            <a class=\"page-link\" href=\"javascript:;\">Next</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, computed, watch } from \"vue\";\r\nimport { useStore } from \"vuex\";\r\nimport { useRoute } from \"vue-router\";\r\nimport { formatted } from \"../../../../assets/composables/date\";\r\nimport { useCurrency } from \"../../../../assets/composables/currency\";\r\n\r\nconst store = useStore();\r\nconst route = useRoute();\r\nconst currentPage = ref(1);\r\nconst perPage = ref(50);\r\nconst search = ref(\"\");\r\nconst isFetching = ref(false);\r\nconst length = ref(null);\r\n\r\nwatch(search, (newValue) => {\r\n  Search(newValue);\r\n});\r\n\r\nconst Search = (keyword) => {\r\n  let data = {\r\n    page: currentPage.value,\r\n    per_page: perPage.value,\r\n    query: keyword,\r\n  };\r\n  store.dispatch(\"users/getUserBanks\", data);\r\n};\r\n\r\nwatch(perPage, (newValue) => {\r\n  perPage.value = newValue;\r\n  getBanks();\r\n});\r\n\r\nconst banks = computed(() => {\r\n  return store.getters[\"users/userbanks\"];\r\n});\r\n\r\nconst getBanks = () => {\r\n  isFetching.value = true;\r\n  let data = {\r\n    id: route.params.id,\r\n    page: currentPage.value,\r\n    per_page: perPage.value,\r\n    query: \"\",\r\n  };\r\n  store\r\n    .dispatch(\"users/getUserBanks\", data)\r\n    .then(() => {\r\n      isFetching.value = false;\r\n      length.value = banks.value.data.length;\r\n    })\r\n    .catch(() => {\r\n      isFetching.value = false;\r\n    });\r\n};\r\n\r\n// Pagination start\r\nconst total = computed(() => {\r\n  return store.getters[\"users/total\"];\r\n});\r\n\r\nconst setPage = (pageNumber) => {\r\n  currentPage.value = pageNumber;\r\n  getBanks();\r\n};\r\n\r\nconst nextPage = () => {\r\n  if (pageNumbers.length > 1) {\r\n    currentPage.value++;\r\n    getBanks();\r\n  }\r\n};\r\n\r\nconst previousPage = () => {\r\n  if (currentPage.value != 1) {\r\n    currentPage.value--;\r\n    getBanks();\r\n  }\r\n};\r\n\r\nconst pageNumbers = computed(() => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= total.value; i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  if (pageNumbers.length > 10) {\r\n    return pageNumbers.splice(0, 10);\r\n  } else {\r\n    return pageNumbers;\r\n  }\r\n});\r\n// Pagination End\r\n\r\nonMounted(() => {\r\n  getBanks();\r\n});\r\n</script>\r\n"],"sourceRoot":""}